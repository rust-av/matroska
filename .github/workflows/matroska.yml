name: matroska

on: [push, pull_request]

jobs:
  clippy-rustfmt:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: clippy, rustfmt

    - name: Run rustfmt
      run:
        cargo fmt --all -- --check --verbose

    - name: Run cargo clippy
      uses: giraffate/clippy-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        clippy_flags: --all-targets -- -D warnings
        reporter: github-pr-review

  code-coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Install grcov
      env:
        GRCOV_LINK: https://github.com/mozilla/grcov/releases/download
        GRCOV_VERSION: v0.8.13
      run: |
        curl -L "$GRCOV_LINK/$GRCOV_VERSION/grcov-x86_64-unknown-linux-musl.tar.bz2" |
        tar xj -C $HOME/.cargo/bin

    - name: Install llvm-tools-preview
      run: |
        rustup component add llvm-tools-preview

    # Not necessary on a newly created image, but strictly advised
    - name: Run cargo clean
      run: |
        cargo clean

    - name: Run tests
      env:
        RUSTFLAGS: "-Cinstrument-coverage"
        LLVM_PROFILE_FILE: "matroska-%p-%m.profraw"
      run: |
        cargo test --all-features --verbose

    - name: Get coverage data for codecov
      run: |
        grcov . --binary-path ./target/debug/ -s . -t lcov --branch \
              --ignore-not-existing --ignore "/*" --ignore "../*" -o lcov.info

    - name: Codecov upload
      uses: codecov/codecov-action@v3
      with:
        files: lcov.info

  tests:
    strategy:
      matrix:
        toolchain:
         - stable-aarch64-apple-darwin
         - stable-x86_64-unknown-linux-gnu
         - stable-x86_64-pc-windows-msvc
         - stable-i686-pc-windows-msvc
        include:
         - toolchain: stable-aarch64-apple-darwin
           os: macOS-latest
         - toolchain: stable-x86_64-unknown-linux-gnu
           os: ubuntu-latest
         - toolchain: stable-x86_64-pc-windows-msvc
           os: windows-latest
         - toolchain: stable-i686-pc-windows-msvc
           os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.toolchain }}

    - name: Run test
      run: cargo test --all-features --verbose

    - name: Run doc
      run: cargo doc --all-features --verbose --no-deps
